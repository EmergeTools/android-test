// Signature format: 3.0
package androidx.test.espresso.remote {

  public interface Converter<I, O> {
    method public O! convert(I);
  }

  public final class EspressoRemote implements androidx.test.espresso.remote.RemoteInteraction {
    method public java.util.concurrent.Callable<java.lang.Void!>! createRemoteCheckCallable(org.hamcrest.Matcher<androidx.test.espresso.Root!>!, org.hamcrest.Matcher<android.view.View!>!, java.util.Map<java.lang.String!,android.os.IBinder!>!, androidx.test.espresso.ViewAssertion!);
    method public java.util.concurrent.Callable<java.lang.Void!>! createRemotePerformCallable(org.hamcrest.Matcher<androidx.test.espresso.Root!>!, org.hamcrest.Matcher<android.view.View!>!, java.util.Map<java.lang.String!,android.os.IBinder!>!, androidx.test.espresso.ViewAction!...!);
    method public static androidx.test.espresso.remote.EspressoRemote! getInstance();
    method public void init();
    method public boolean isRemoteProcess();
    method public void terminate();
  }

  public final class FieldDescriptor {
    method public static androidx.test.espresso.remote.FieldDescriptor! of(Class<? extends java.lang.Object!>, String, int);
    field public final String! fieldName;
    field public final Class<? extends java.lang.Object!>! fieldType;
    field public final int order;
  }

  public final class GenericRemoteMessage implements androidx.test.espresso.remote.EspressoRemoteMessage.To<com.google.protobuf.MessageLite!> {
    ctor public GenericRemoteMessage(Object);
    method public com.google.protobuf.MessageLite! toProto();
    field public static final androidx.test.espresso.remote.EspressoRemoteMessage.From<java.lang.Object!,com.google.protobuf.MessageLite!>! FROM;
  }

  public final class InteractionRequest implements androidx.test.espresso.remote.EspressoRemoteMessage.To<com.google.protobuf.MessageLite!> {
    method public org.hamcrest.Matcher<androidx.test.espresso.Root!>! getRootMatcher();
    method public androidx.test.espresso.ViewAction! getViewAction();
    method public androidx.test.espresso.ViewAssertion! getViewAssertion();
    method public org.hamcrest.Matcher<android.view.View!>! getViewMatcher();
    method public com.google.protobuf.MessageLite! toProto();
  }

  public static class InteractionRequest.Builder {
    ctor public InteractionRequest.Builder();
    method public androidx.test.espresso.remote.InteractionRequest! build();
    method public androidx.test.espresso.remote.InteractionRequest.Builder! setRequestProto(byte[]);
    method public androidx.test.espresso.remote.InteractionRequest.Builder! setRootMatcher(org.hamcrest.Matcher<androidx.test.espresso.Root!>);
    method public androidx.test.espresso.remote.InteractionRequest.Builder! setViewAction(androidx.test.espresso.ViewAction);
    method public androidx.test.espresso.remote.InteractionRequest.Builder! setViewAssertion(androidx.test.espresso.ViewAssertion);
    method public androidx.test.espresso.remote.InteractionRequest.Builder! setViewMatcher(org.hamcrest.Matcher<android.view.View!>);
  }

  public final class InteractionResponse implements androidx.test.espresso.remote.EspressoRemoteMessage.To<com.google.protobuf.MessageLite!> {
    method public androidx.test.espresso.remote.InteractionResponse.RemoteError! getRemoteError();
    method public androidx.test.espresso.remote.InteractionResponse.Status! getStatus();
    method public boolean hasRemoteError();
    method public com.google.protobuf.MessageLite! toProto();
  }

  public static class InteractionResponse.Builder {
    ctor public InteractionResponse.Builder();
    method public androidx.test.espresso.remote.InteractionResponse! build();
    method public androidx.test.espresso.remote.InteractionResponse.Builder! setRemoteError(androidx.test.espresso.remote.InteractionResponse.RemoteError?);
    method public androidx.test.espresso.remote.InteractionResponse.Builder! setResultProto(byte[]);
    method public androidx.test.espresso.remote.InteractionResponse.Builder! setStatus(androidx.test.espresso.remote.InteractionResponse.Status);
  }

  public static final class InteractionResponse.RemoteError {
    method public int getCode();
    method public String! getDescription();
    field public static final int REMOTE_ESPRESSO_ERROR_CODE = 0; // 0x0
    field public static final int REMOTE_PROTOCOL_ERROR_CODE = 1; // 0x1
  }

  public enum InteractionResponse.Status {
    enum_constant public static final androidx.test.espresso.remote.InteractionResponse.Status Error;
    enum_constant public static final androidx.test.espresso.remote.InteractionResponse.Status Ok;
  }

  public final class ProtoUtils {
    method public static String! capitalizeFirstChar(String!);
    method public static <T extends java.lang.Enum> T! checkedGetEnumForProto(int, Class<T!>!);
    method public static java.util.List<java.lang.reflect.Field!>! getFilteredFieldList(Class<? extends java.lang.Object!>!, java.util.List<java.lang.String!>!) throws java.lang.NoSuchFieldException;
  }

  public final class RemoteDescriptor {
    method public java.util.List<androidx.test.espresso.remote.FieldDescriptor!>! getInstanceFieldDescriptorList();
    method public Class<? extends java.lang.Object!>! getInstanceType();
    method public String! getInstanceTypeName();
    method public Class<? extends java.lang.Object!>! getProtoBuilderClass();
    method public com.google.protobuf.Parser<? extends java.lang.Object!>! getProtoParser();
    method public Class<? extends java.lang.Object!>! getProtoType();
    method public Class<? extends java.lang.Object!>![]! getRemoteConstrTypes();
    method public Class<? extends java.lang.Object!>! getRemoteType();
  }

  public static final class RemoteDescriptor.Builder {
    ctor public RemoteDescriptor.Builder();
    method public androidx.test.espresso.remote.RemoteDescriptor! build();
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setInstanceFieldDescriptors(androidx.test.espresso.remote.FieldDescriptor!...?);
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setInstanceType(Class<? extends java.lang.Object!>);
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setProtoBuilderType(Class<? extends java.lang.Object!>);
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setProtoParser(com.google.protobuf.Parser<? extends java.lang.Object!>);
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setProtoType(Class<? extends java.lang.Object!>);
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setRemoteConstrTypes(Class<? extends java.lang.Object!>!...?);
    method public androidx.test.espresso.remote.RemoteDescriptor.Builder! setRemoteType(Class<? extends java.lang.Object!>);
  }

  public final class RemoteDescriptorRegistry {
    method public androidx.test.espresso.remote.RemoteDescriptor! argForInstanceType(Class<? extends java.lang.Object!>);
    method public androidx.test.espresso.remote.RemoteDescriptor! argForMsgType(Class<? extends java.lang.Object!>);
    method public androidx.test.espresso.remote.RemoteDescriptor! argForRemoteTypeUrl(String);
    method public static androidx.test.espresso.remote.RemoteDescriptorRegistry! getInstance();
    method public boolean hasArgForInstanceType(Class<? extends java.lang.Object!>);
    method public boolean registerRemoteTypeArgs(java.util.List<androidx.test.espresso.remote.RemoteDescriptor!>);
    method public void unregisterRemoteTypeArgs(java.util.List<androidx.test.espresso.remote.RemoteDescriptor!>);
  }

  public final class TypeProtoConverters {
    method public static <T> T! anyToType(com.google.protobuf.Any);
    method public static android.os.Parcelable! byteStringToParcelable(com.google.protobuf.ByteString, Class<android.os.Parcelable!>);
    method public static <T> T! byteStringToType(com.google.protobuf.ByteString);
    method public static com.google.protobuf.ByteString! parcelableToByteString(android.os.Parcelable);
    method public static <T> com.google.protobuf.Any! typeToAny(T);
    method public static com.google.protobuf.ByteString! typeToByteString(Object);
  }

}

